{
  "Thursday": {
    "8:00": {
      "Track 1": "Registration opens",
      "Track 2": "Registration opens"
    },
    "9:00": {
      "Track 1": "Introduction",
      "Track 2": null
    },
    "9:15": {
      "Track 1": "Keynote - Raquel Vélez",
      "Track 2": null
    },
    "10:00": {
      "Track 1": "Morning tea",
      "Track 2": "Morning tea"
    },
    "10:30": {
      "Track 1": {
        "name": "Matt McKegg",
        "avatar": "https://secure.gravatar.com/avatar/4841212596213e29fdf3f003a65f91e5?s=500",
        "bio": "Matt McKegg is a JavaScript hacker and backyard musician from Wellington, New Zealand. He is currently building [Loop Drop](http://loopjs.com/), an open source tool for live electronic music, using Electron and Web Audio. Recently he started working on [Ferment](http://ferment.audio), a peer-to-peer audio publishing and streaming platform - like SoundCloud but decentralised. He spends the rest of his time creating and performing music as [DESTROY WITH SCIENCE](http://soundcloud.com/destroy-with-science).",
        "twitter": "MattMcKegg",
        "title": "I Play the JavaScript",
        "abstract": "Find out how I use JavaScript to power my live electronic music performances. See (and hear) Web Audio, MIDI, and electron in action!",
        "description": "I'd like to share my experiences building desktop audio software with JavaScript and Electron, and discuss how modern \"web technologies\" (such as the Web Audio API) can empower new art-forms and creativity.\r\n\r\nI had been dabbling in bedroom music production for nearly a decade, but things took a turn in 2010 when I started trying to play live. The charade of “performing” electronic music (mostly just pressing play and twiddling a few knobs) turned out to be incredibly frustrating and rather boring. So began a series of experiments to find the perfect setup with the flexibility and control of an acoustic instrument. But nothing seemed to work quite the way I wanted. \r\n\r\nAt that time, I was just starting to get deep into Node and JavaScript, and the Web Audio API was becoming a thing. Maybe it was time to “be the change”? Next minute, found myself [developing my own music software](https://github.com/mmckegg/loop-drop-app). How hard could it be, right? ",
        "audience_level": "All",
        "tag_list": [
          "javascript",
          "web audio",
          "web midi",
          "electron",
          "music",
          "performance"
        ],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Igor Costa",
        "avatar": "https://secure.gravatar.com/avatar/457041ab73e72bc588ae532828f14d7b?s=500",
        "bio": "I'm solutions Digital Architect at Solnet, prior to that I was Senior UI Developer at VizExplorer but my main career started in Brazil. I accumulate more than 15 years in the industry working with Big Data and PB of data every day, developing and understanding algorithms to implementing and impacting business value.\r\nWhile not working I love traveling around New Zealand, CoD player.",
        "twitter": "igorcosta",
        "title": "Deep learning in your browser",
        "abstract": "How javascript could be used to harness the power of deep learning algorithms to understand the world around us. This presentation will help the audience to understand deep learning in a simple way using their existing knowledge in javascript, implementing and solving funny and real examples.",
        "description": "A few years ago someone had the courage to use javascript in a back-end. Today javascript can be used almost everywhere, but sadly javascript is barely used in the deep learning world, machine learning. The YAJSDLNF (Yet Another JavaScript Deep Learning Network Framework) should be use frequently rather then barely.\r\nThis presentation is to help audience to understand deep learning and machine learning algorithms in their field of view (javascript).\r\nFrom sentiment analysis to funny gif generator, deep learning solve complex problems and in this presentation you will find out more.\r\n",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "11:05": {
      "Track 1": {
        "name": "Stefan Judis",
        "avatar": "https://secure.gravatar.com/avatar/c3d5391cad0bfd258a36f4ea68655668?s=500",
        "bio": "Stefan started programming 6 years ago and quickly fell in love with web performance, new technologies and automation. \r\n\r\nHe worked for several startups in Berlin and recently joined Contentful to to tell the world how an API-first CMS can make you a bit happier. \r\n\r\nHe is also a curator of the web performance online resource Perf Tooling (perf-tooling.today), organizer of the Web Performance Meetup Berlin, contributes constantly to a variety of open source projects and enjoys sharing nerdy discoveries.",
        "twitter": "stefanjudis",
        "title": "“I can’t work on my phone” - desktop all the things",
        "abstract": "The web platform gets stronger and new technologies are coming into our browsers every day. Does this mean that we don't need desktop apps anymore? No, a big trend is happening in parallel. A new platform to build desktop applications entered the stage–Electron. Let's have a look at how this works.",
        "description": "The web platform gets stronger every month. Bluetooth, offline capability and even virtual reality are coming into our browsers.\r\n\r\n\r\nDoes this mean that we don't need desktop apps anymore? \r\n\r\n\r\nNo, a big trend is happening in parallel. A new go-to platform to build desktop applications entered the stage – Electron. \r\n\r\n\r\nEverything in Electron is built with HTML, CSS and JavaScript. Now frontend developers build almost everything with it. From small tiny apps solving everyday problems to full fledged IDEs – developers build tools for the environment they spend at least eight hours a day in: the desktop.\r\n\r\n\r\nLet's have a look at how this works and what it takes to build a desktop app.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Michael McGahan",
        "avatar": "https://secure.gravatar.com/avatar/8ccce579a02550e72bdde76a0fe8ae1d?s=500",
        "bio": "Dr Mike works remotely from New Zealand as a Product Engineering Lead for Meetup in New York, defining the architecture for the first complete rewrite of the web application in the company's 14 year history. With an eclectic background in cognitive science and software engineering that reflects his deep interest in both UX and software architecture, he is constantly in search of the best strategies for producing applications that are not just a pleasure to use, but a pleasure to build.",
        "twitter": "mikemcgahan",
        "title": "Reactive Query - an alternative to REST for universal JS web apps",
        "abstract": "Why REST when you can react? Universal JS web apps are built on the strength of end-to-end JS, but many developers still drop into HTTP when querying for data. This talk presents Reactive Query, an alternative JS-native communication pattern built for predictability, consistency, and scalability.",
        "description": "REST is great when the lowest common denominator of a client-server system is HTTP, but universal web apps can do better. Why parse headers, HTTP response codes, and query params in a universal JS web app that otherwise treats HTTP as an implementation detail? As part of a broad 're-platforming' effort at Meetup, we have applied functional principles to design Reactive Query (RQ), a finely-tuned JSON-based data exchange format that avoids the bloat and awkward protocol transforms that encumbers REST-driven web applications, maintaining 'language-native' data structures across the server-browser divide.\r\n\r\nThis talk will introduce RQ and demonstrate how it leverages the one-way data flow of modern web frameworks, considering how the pattern applies to architectures from the smallest single-server universal app to the most complex distributed service platforms. You'll find out not only how we are using Reactive Query at Meetup, but how the underlying principle can be generalised to simplify, streamline, and enhance web development in JavaScript.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "11:40": {
      "Track 1": {
        "name": "Scott Feinberg",
        "avatar": "https://papercallio-production.s3.amazonaws.com/uploads/user/avatar/2/10547287_1449381938671422_1249243637_n.jpg",
        "bio": "Scott is the Technical Lead on the New York Times Cooking Product, a part of our Beta Group. In addition to working at The Times, Scott is the CEO of PaperCall.io, helping events find qualified speakers.",
        "twitter": "scottefein",
        "title": "Continuously Cooking: Our Path to Continuous Delivery",
        "abstract": "It's easy to continuously deliver a relatively simple app with low traffic, but the stakes get a lot higher when you have millions of users and four years of legacy code. We'll talk about how NYT Cooking has gone from shipping stale code every few weeks to shipping fresh code everyday. ",
        "description": "Four years ago, The New York Times launched NYT Cooking, a cooking-specific vertical showcasing 165 years of New York Times Recipes. That Rails Monolith is still in use today, delivering recipes, guides, and how-to videos to millions of users a month. \r\n\r\nAfter three years of legacy and working on a deprecated infrastructure, we were lucky if we shipped once every few weeks, and even then often led to deployment failures. Since then we've gone from shipping our monolith with very our fingers crossed to shipping every day with confidence. We'll look at how we changed our development practices, improved what and how we test, and automated our workflows. We'll also examine some of the unique enterprise concerns around continuous delivery and how we adapted and evolved our process so our engineering team works in tandem with design, and product to ship as often as possible.\r\n\r\nIntended Audience: Developers, DevOps people who are working on complicated/large scale applications and haven't been able to recognize the benefits of continuous delivery. Audience members should walk away with some actionable takeaways about how they can ship faster, and how they can sell shipping faster to the rest of their organization.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Craig Spence",
        "avatar": "https://secure.gravatar.com/avatar/7ea079654bb159fdaa4043834688f57d?s=500",
        "bio": "Craig is a Senior JavaScript Developer at Trade Me in Wellington and a committee member of JavaScript NZ.\r\nHe really loves JavaScript, hardcore punk and his cat Cosy.",
        "twitter": "phenomnominal",
        "title": "Fantastic ASTs and Where to Find Them",
        "abstract": "Abstract Syntax Trees are an incredibly useful way of representing the structure of source code. Let's learn some more about them and some of the fantastic ways that we can use them to analyse, manipulate, and even dynamically create JavaScript code!",
        "description": "We all benefit from the power of [Abstract Syntax Trees](https://en.wikipedia.org/wiki/Abstract_syntax_tree) everyday, whether we know what they are or not! This talk will be a dive into what they are, why they're important, and how we can use them with JavaScript, including how they can be used for:\r\n\r\n* linting our code (and automatically fixing lint errors!)\r\n* formatting code\r\n* and even creating code on the fly\r\n\r\nCome along and find out more! ",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "12:15": {
      "Track 1": "Lunch",
      "Track 2": "Lunch"
    },
    "1:45": {
      "Track 1": {
        "name": "Alex Gibson, Aurynn Shaw, Samson Ootoovak, Matt Powell, Dana Iti, Ruth McDavitt",
        "avatar": "https://secure.gravatar.com/avatar/a11d368b54f65e98eda9d53fe9fc0e34?s=500",
        "bio": "Alex Gibson is a software engineer who’s passionate about building a culture within our industry that supports mental diversity. Suffering from Bipolar disorder, Gibson knows mental discrimination and burnout all too well, and is keen to pass on the knowledge he’s learnt over the years to anyone looking for help.\r\n\r\nAurynn Shaw is a DevOps consultant who has been working at her own company for the last two years. Her major focus has been on understanding the cultural changes necessary for DevOps, and how our existing cultures are filled with mechanisms that worsen the mental health of persons in tech. She suffered a major crash three years ago, and is still on the road to recovery.\r\n\r\nSamson Ootoovak has worked in the tech industry for nine years in mostly small to medium sized companies as a contractor, part of a startup, and as an employee. He is familiar with the feelings of Impostor Syndrome and running just to keep up. He has been in the industry long enough to have noticed a few patterns of burnout in himself and is keen to help others work within the cycles of ups and downs.\r\n\r\nMatt Powell is a software developer and theatre maker who is overwhelmed easily in social groups, open-plan offices and large meetings. Things started clicking into place when, at the age of 36, he was diagnosed with ADHD and began to understand how to talk to friends and colleagues to get the most out of difficult situations and remain productive and positive.\r\n\r\nDana Iti has worked in the industry as a freelancer, tutor and web developer for many years. She experienced burnout 10 years ago when she was working on multiple projects while freelancing, running two businesses and raising her two sons. A year ago, Dana came close to reaching the burnout limit again. “There was a time, when I just couldn’t touch the keyboard anymore. I was pushing myself really hard to be better.” Being a Maori female, she’s felt the need to prove her worth and is quite familiar with the term ‘Impostor Syndrome’. Dana is happy to share her experiences and ways she’s learned to cope over the years to prevent burning out in the future.",
        "twitter": "",
        "title": "Open Sourcing Mental Health",
        "abstract": "Mental fatigue and burnout are almost unavoidable in the IT industry, but it's not something we have to go through alone: there is help out there.\n\nThis panel will openly talk about personal challenges with mental health and burnout, and discuss how we can address it as an industry.",
        "description": "Programming is a task that incurs a high cognitive load, and when coupled with project deadlines and the fast pace of agile development, you're left with a recipe for mental fatigue, stress, and burnout. \r\n\r\nOccupational burnout is defined as exhaustion, lack of enthusiasm and an overall feeling of ineffectiveness in the workplace. Most of us have or will experience burnout at some stage in our professional career, but even though it's so prevalent, as a group we're too scared to talk about it. Help is available, but because we aren't talking about burnout and mental health openly and don't put the time in to educate everyone about resources, people don't get the help that they need. So they stay sick and suffer unnecessarily.\r\n\r\nThis panel aims to start the discussion, with panelists that will openly talk about their experiences in burnout and the psychological challenges that go with it. They will be sharing their personal stories, coping mechanisms, and discussing early warning signs and strategies that help them prevent burnout. \r\n\r\nIf you'd like to be part of the discussion then come along and join the community as we open source our mental health.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "panel"
      },
      "Track 2": {
        "name": "David Plumpton",
        "avatar": "https://secure.gravatar.com/avatar/53bb7206817e72ef85cc96e4b3b8b6f0?s=500",
        "bio": "I'm a senior developer at Solnet Solutions, generally specialising in integration projects. My day job is mostly Java and hooking disparate systems together. I'm interested in functional programming, pragmatic system design tradeoffs, Clojure and Clojurescript, Elasticsearch, board games, neurophilosophy, and science fiction. My use of Javascript is rather coincidental. My first programming experience was the TRS-80 with 4K of RAM and tape cassettes. I'm constantly amazed by how good we all have it these days.",
        "twitter": "DavidPlumpton",
        "title": "Putting the Fun back into Functional with Lambda Calculus",
        "abstract": "What is Lambda Calculus? What can it do? How does understanding it help with understanding functional programming? A lighthearted look at an austere topic that you will never use, but will be better for knowing.",
        "description": "You may have heard of a scary sounding thing called \"The Lambda Calculus\". It even puts two scary words right next to each other. So, what is it exactly? Where did it come from? What can it do? How can it help with my next pay raise? Some of these questions will be answered.\r\n\r\nThis talk is about the intellectual joy of understanding a very simple basis of computation, and some of the things that can be done with it. I will briefly cover the history of Lambda Calculus, and then focus on how some familiar simple computing constructs can be performed. This is simply the kind of topic that you will either find pretty interesting, or very boring. I'm hoping it's one of those things.\r\n\r\nP.S. If this talk is useful for your career in any way then one of us is probably doing something wrong.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "2:20": {
      "Track 1": {
        "name": "Robert Pearce",
        "avatar": "https://secure.gravatar.com/avatar/e9ea42d200563866b6f755ec647bda2a?s=500",
        "bio": "I'm a freelance software developer with six years in the game where I've worked on fully remote teams for years, taught programming full-time, done the startup thing and traveled extensively throughout. When not working new you can find me mentoring others, learning something new, playing the guitar in a pub, playing tennis, running, snow skiing or on a beach with my better half.",
        "twitter": "RobertWPearce",
        "title": "Teamwork Lessons for \"A players\"",
        "abstract": "Striving to be an \"A player\" while on a team can have unintended consequences that can prove detrimental to you, your team and company. In this talk, we'll approach common software development scenarios, observe their effects and uncover beneficial alternatives.",
        "description": "Many of us strive to be \"A players\" at our places of work: the ones who work the long hours and refactor half the codebase when adding a new feature. The work needs to be done, and we're just the heroes/ninjas/wizards to get the job done... right? In this talk, we'll look at common coding & team scenarios as approached by the \"A player\" mentality, examine the possible cost to you, your team and company, and discover alternative means of tackling such problems.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Jack Skinner",
        "avatar": "https://papercallio-production.s3.amazonaws.com/uploads/user/avatar/2153/jack_skinner-02_medium_sq.jpg",
        "bio": "Jack Skinner is a Senior Software Engineer turned API Evangelist who’s been coding over half his life.\r\n\r\nJack Skinner brings a youthful energy that is engaging and captivating. With over 11 years of software development under his belt, Jack knows code, APIs and developers.\r\n\r\nAs API Evangelist at MYOB, Jack is responsible for over 4,000 developer partners who build add-on solutions connected to MYOB software. Jack is passionate about connected solutions, customer experience and great results for your clients.",
        "twitter": "developerjack",
        "title": "Pushing the web to the next level",
        "abstract": "HTTP/2 push isn't just a feature, its a completely new way to think about transporting HTTP messages.\nThis talk explores the performance benefits of HTTP/2 with specific reference to server push and how and when to take advantage of it in your new and existing projects.",
        "description": "As the average page size sky rockets year on year, engineers have been frantically finding more performant ways to transport megabytes of JavaScript. This talk explores what HTTP/2 and server push brings to the table for both existing applications, new projects, and APIs servicing our favourite clients. Using a real-world, custom built HTTP/2 service I'll share stories of performance analysis, and API development designed to best utilise HTTP/2 and server push.\r\nAttendees will leave this session with the tools and foundations to support HTTP/2 server push in their own applications.",
        "audience_level": "Intermediate",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "2:55": {
      "Track 1": {
        "name": "Anna Lezhikova",
        "avatar": "https://secure.gravatar.com/avatar/a87f187ec74df55d7314276eb904040b?s=500",
        "bio": "I'm a freshly converted developer, a CS student (machine learning), a woman, a person with inquisitive mind. \r\nI love to ask questions and search for answers.\r\nI love coding and I want to teach machines how to do it. ",
        "twitter": "",
        "title": "Being a paradigm tolerant JS developer",
        "abstract": "A long lasting holy war between OOP and FP in JS world might end someday with more people using multi-paradigm approach to their coding. And I would like to give some ideas where to start. ",
        "description": "I believe one day people stop \"killing\" each other for choosing prototype inheritance over pure moduled functions and start combine the best things JS can offer and do it responsibly and wisely. Why FP people hate classes and states so much? Why OOP people are so afraid of pure functions and statelessness? Where JS is in this bi-polar world of programming paradigms?  I will try to find the answers and give some ideas on where to start being a paradigm-tolerant JS developer and get the best from the language. ",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Brooke Mitchell",
        "avatar": "https://secure.gravatar.com/avatar/ba87fe85fbce6a11da66cfc2a4e9328f?s=500",
        "bio": "I spent the last five years studying music composition and working as an interactive experience designer before making the transition to programming.\r\n\r\nI'm a developer in ~~~Wellington~~~Auckland and still learning a lot about Javascript and functional programming. A big part of my day job is dealing with large, 'messy' data sets.\r\n\r\n",
        "twitter": "brocmit",
        "title": "I've got the keys! Using lenses and transducers simplify your life.",
        "abstract": "These are my experiences using lenses and transducers to radically simplify data manipulation. Can we replace framework specific tools with universal functional programming techniques? Yes, let's try it out.",
        "description": "Sometimes managing your state gets out of control. Formatting is funky, components are creaky, selectors are stretched and updates unwieldy. These are my experiences creating a mess managing complicated data, then finding a way back to simplicity with lenses and transducers.\r\n\r\nFrom a newbie's perspective let's learn about lenses and transducers. No prior experience with functional programming is expected. Learn data selection and modification techniques that will work with complex data sets anywhere. See how lenses and transducers simplify making changes to deeply nested objects and create simple, speedy transformations that are easy to extend.\r\n\r\nYou will learn what lenses and transducers are, how they are related, and see examples from my refactoring of a React/Redux application. See examples of how framework specific libraries can be re-implemented as generic framework agnostic tools. Find out if these lenses and transducers really are the keys to reducing code clutter.",
        "audience_level": "Intermediate",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "3:30": {
      "Track 1": "Afternoon tea",
      "Track 2": "Afternoon tea"
    },
    "4:00": {
      "Track 1": {
        "name": "Julien Simon",
        "avatar": "https://secure.gravatar.com/avatar/e10ee99850609c1fd8793e1473d441b5?s=500",
        "bio": "Julien Simon, Principal Technical Evangelist at Amazon Web Services.\r\nBefore joining AWS, Julien served for 10 years as CTO/VP Engineering in top-tier web startups. Thus, he’s particularly interested in all things architecture, deployment, performance, scalability and data. As a Principal Technical Evangelist, Julien speaks very frequently at conferences and technical workshops, where he meets developers and enterprises to help them bring their ideas to life thanks to the Amazon Web Services infrastructure.\r\n",
        "twitter": "julsimon",
        "title": "Building serverless apps with Node.js",
        "abstract": "After a quick refresh on what serverless architectures are and why they matter, this code-level talk will demo how you can easily build and deploy Node.js serverless applications on AWS, using AWS services such as Lambda and API Gateway, as well as several Open Source frameworks.",
        "description": "After a quick refresh on what serverless architectures are and why they matter, this code-level talk will demo how you can easily build and deploy Node.js serverless applications on AWS. In order to do this, we will use several AWS managed services such as Lambda, API Gateway and DynamoDB.  Developers love their tools, so we will throw a couple of Open Source Frameworks into the mix (Serverless framework and Gordon), which help make the development and deployment experience as smooth as possible. To conclude, we will discuss CI/CD options for serverless apps. And of course, we'll hang around to answer as many questions possible. One last note: don't worry if you haven't used AWS before, there aren't any prerequisites... and serverless is actually a great way to start from a blank page :)",
        "audience_level": "Intermediate",
        "tag_list": [],
        "length": 45,
        "type": "talk"
      },
      "Track 2": {
        "name": "Kim Carter",
        "avatar": "https://secure.gravatar.com/avatar/3d048d750886711537e12649d0b305c1?s=500",
        "bio": "Technologist / Engineer, Information Security Professional, Entrepreneur and the founder of BinaryMist Ltd (https://binarymist.io/). OWASP NZ Chapter Leader. Certified Scrum Master. Facilitator, mentor and motivator of cross functional, self managing teams. With a solid 15 years of commercial industry experience across many domains, Kim Carter enjoys teaching others how to apply information security to their Agile processes, bringing the security focus up front where it's the cheapest to implement, increasing profit and reducing costs. Organiser of two information security conferences (OWASP NZ Day and Christchurch Hacker Con), International trainer, speaker and published author focusing on\r\n\r\n* Software and network architecture\r\n* Web development and engineering\r\n* Information security\r\n\r\nKim is also a regular blog poster at http://blog.binarymist.net. Kim loves designing and creating robust software and networks, breaking software and networks, then fixing them and helping organisations increase productivity.\r\n",
        "twitter": "binarymist",
        "title": "The Art of Exploitation",
        "abstract": "In order to understand both the importance and the how to, of mitigating your attackers attempts to exploit your weaknesses, you must first understand your attackers and how they succeed.\nKim will examine and demonstrate a collection of essential attacks, commonly used in the exploitation and demise of many individuals and organisations today.",
        "description": "In order to understand both the importance and the how to, of mitigating your attackers attempts to exploit your weaknesses, you must first understand your attackers and how they succeed.\r\nKim will examine and demonstrate a collection of essential attacks, commonly used in the exploitation and demise of many individuals and organisations today.\r\n\r\nKim will then address the mitigation techniques, and how the whole process of exploitation and mitigation can and should fit within each and every Scrum Sprint.\r\n\r\nAll content is sourced from Kim's first and second volumes of a three part book series (Holistic Info-Sec for Web Developers) specifically focussed on equipping Web Developers to stay ahead of their attackers.",
        "audience_level": "Intermediate",
        "tag_list": [],
        "length": 45,
        "type": "talk"
      }
    },
    "4:50": {
      "Track 1": {
        "name": "Tanya Gray",
        "avatar": "",
        "bio": "Web development is her day job, but teaching is her passion. Tanya has traveled the country teaching programming to secondary school teachers and students, but has more recently been diving deep into JavaScript development using Angular. Introducing people to new concepts in simple ways is one of Tanya’s greatest strengths. Also, I heard she has five bunny rabbits. And a cat.",
        "twitter": "tanya",
        "title": "Getting Started with JavaScript Bundling",
        "abstract": "Integrating a build process into your web workflow for the first time is scary stuff. I’d like to give a conceptual overview of packaging JS in general. Start with “why to do it” then discuss “basic builds” to concat and minify compared with “intelligent bundling” and using npm to manage libs.",
        "description": "Bundling your code makes it smaller, faster to load, and can also improve your experience as a developer. Having a “build” step in your workflow has become an essential part of JavaScript development. We will look at why we bundle code, how to get started, and where to go next once you’re comfortable with the basic concepts. The developer tools we’ll look at are npm and webpack. If you’re comfortable with JavaScript but you have never minified or bundled your own scripts then this talk is for you.",
        "audience_level": "Beginner",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Stuart Whitehead",
        "avatar": "https://secure.gravatar.com/avatar/9e1038ede18e5cec589e2cadf1af9add?s=500",
        "bio": "Kia Ora! I’m a developer at design-led digital agency Springload. I’ve previously worked at agencies in Scotland and Germany before settling here in Wellington. I enjoying learning about all things dev — and then sharing them!\r\n\r\nIn the last year I’ve graduated from an honours degree in Computer Science and was named ScotlandIS Young Software Engineer of the Year, which is rad. Outside of work you’ll find me travelling around with my mountain bike, or in the pub with a nice beer.",
        "twitter": "stuartwhitehead",
        "title": "Exploring Static Isomorphism",
        "abstract": "Static isomorphism is a pragmatic architecture for single-page JavaScript applications. It allows us to develop purposeful user interfaces while promoting an efficient and maintainable codebase.",
        "description": "Single-page JavaScript applications empower rich user interfaces and experiences. They however come at a cost to performance and accessibility — often unacceptable tradeoffs for many situations.\r\n\r\nServer-side rendering can be harnessed to resolve these challenges. It however introduces different challenges, like user authentication and increased infrastructure complexity.\r\n\r\nNot satisfied with either of these approaches, we’ve been exploring static isomorphism — a combination of server-side rendering and static website generation. Join Stuart as he demonstrates this pragmatic architecture for single-page JavaScript applications, and how it allows us to develop purposeful user interfaces while promoting an efficient and maintainable codebase.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "5:20": {
      "Track 1": "End of day one",
      "Track 2": "End of day one"
    }
  },
  "Friday": {
    "8:30": {
      "Track 1": "Doors open",
      "Track 2": "Doors open"
    },
    "9:00": {
      "Track 1": "Day introduction",
      "Track 2": "Day introduction"
    },
    "9:05": {
      "Track 1": "Keynote - Ri Liu",
      "Track 2": null,
    },
    "9:50": {
      "Track 1": "Morning tea",
      "Track 2": "Morning tea"
    },
    "10:20": {
      "Track 1": {
        "name": "Raf Gemmail and Paul Sharpe",
        "avatar": "https://secure.gravatar.com/avatar/90844affc2a5e0b747099960ac46e40f?s=500",
        "bio": "**Paul’s** addiction to programming began when he encountered BASIC in 1980.  BASIC proved to be a gateway to via Z80, and harder languages like Pascal, C, SQL and Eiffel, which he discovered at university.  After 2 decades of highs and lows (Perl, PHP, Javascript) in industry, he returned to university to study psychology.  Paul is currently a PhD candidate, researching the cognitive effects of meditation.  Right now, this means R.  He will draw on past lives when Python arises.\r\n\r\n**Raf** is an Agile Technical Lead on Stuff.co.nz, where he leads several teams in deconstructing a Java monolith in to lighter node and Java based microservices. Raf is a life-long developer, a former Catalysta, InfoQ news editor and has also helped shaped key products for the BBC’s iPlayer, NTT, Morgan Stanley, Booking.com and Trinity (Daily) Mirror, among others. He is a passionate about Lean and DevOps cultures . Raf also runs a Code Club in Levin and enjoys supporting his kids’ home-schooling.\r\n",
        "twitter": "",
        "title": "Psychology and the Art of Pair Programming",
        "abstract": "Few would disagree with the merits of discussing design, asking for help, testing, code review or knowledge sharing across a team. Pair programming ensures all of these in real time. A technical coach and psychologist present pairing styles, a psychological basis, tools and a remote pairing demo.",
        "description": "Few developers would disagree with the importance of discussing design, asking for help, testing for correctness, code review or knowledge sharing across a team. Pair programming ensures that all of these concerns are addressed in real time. Brought to the masses by the XP movement, this social approach to development has since evolved to spawn practices for larger groups, such as mobbing and swarming. \r\n\r\nRaf coaches teams which mob on node services and Paul is a former developer and current post-graduate psychologist. The two paired together in the distant past and have remained fascinated with its underlying psychology.\r\n\r\nTogether they explore anecdotes of pairing, different styles, the underlying psychology and tooling. Ultimately they address the big challenge of how to make pairing work for geographically distributed teams. A live demonstration of a remote pairing on a js bug is provided as proof of its awesomeness, in the face of Demo Gods.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Kirk Jackson",
        "avatar": "https://secure.gravatar.com/avatar/2eefc5ff9a8c3a8a5c8113908c47fc60?s=500",
        "bio": "Kirk is the Security Lead at Snapper, the proudly Wellington developers of smart ticketing systems for public transport. Kirk helps organise the Wellington OWASP chapter meetups and the yearly NZ OWASP Day, and is keenly interested in web security, web development and other topics beginning with \"web\".\r\n\r\nThe conference system asks \"Who's your favorite member of One Direction?\", and Kirk previously had no opinion on this important topic. Upon reflection (and consulting the band's Wikipedia page), Kirk has chosen Zayn Malik due to his impressive coiffure and his 2015 liberation from boy-band-dom.",
        "twitter": "kirkj",
        "title": "Your browser wants you to be secure",
        "abstract": "Web browsers developers now work hard to keep your users and your applications secure.\n\nWe'll discuss the state of the art defences provided by web browsers, and explain how you can incorporate them into your web applications. You will learn how to fairly easily improve the security of your apps. ",
        "description": "The makers of Chrome, Firefox, Internet Explorer and other browsers are constantly pushing the envelope in browser security, with new features recently released and under development. Many of these features are simple to incorporate into your application, and this talk will help you keep up with the moving target of _staying safe_ on the internet.\r\n\r\nOver the past 5 years there have been numerous HTTP headers, sandboxing and protection mechanisms added to browsers - so many that it's hard to keep up! It's possible that the best defences you learnt in 2011 have been bettered by the new stuff rolling out each month in 2017.\r\n\r\nIn this talk you'll learn about the old, with a focus on the new and shiny. We will focus on those protections that are available now, and proven by others to work -- and have a quick point towards future security enhancements that are coming in the future.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "10:55": {
      "Track 1": {
        "name": "Nat Dudley",
        "avatar": "https://secure.gravatar.com/avatar/d8469b578cab36568b2d339a9390bdee?s=500",
        "bio": "Nat is the Head of Design for Figure.NZ, where she spends her days helping kiwis to see New Zealand clearly by making open data findable and useable. She was formerly the Solutions and UX Lead for Vend, a retail SaaS platform. A user experience designer by trade, Nat advocates for an intersectional, inclusive approach to designing our future.\r\n\r\nIn her (elusive) spare time, she works with conferences, events and companies to make NZ's tech sector a more welcoming place for under-represented minorities.",
        "twitter": "natdudley",
        "title": "Around the world in 80 shades 🌏📊",
        "abstract": "Dataviz is becoming more and more popular, both for fun and in web applications we build for work, but loads of it is inaccessible for colour-blind people. Learn how to use different colourspaces and JS libs to build colour-blind accessible data visualisations.",
        "description": "Everyone loves data visualisations. They're a great way to communicate data to your users and readers. But many data visualisations fail even the most basic accessibility requirements for colour-blind people.\r\n\r\nYou'll learn about the 8 forms of colour-blindness, colour spaces, designing charts and maps, and JavaScript libraries and other tools that can help you make sure everyone can see the information you're sharing.",
        "audience_level": "All",
        "tag_list": [
          "dataviz",
          "accessibility",
          "design",
          "javascript"
        ],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Tim Wright",
        "avatar": "https://secure.gravatar.com/avatar/7207a35a216363563593d08781da99ba?s=500",
        "bio": "Tim Wright is an ex computer science university lecturer who has been happily programming outside university for some time now. He uses Test Driven Design and likes to let designs emerge as the coding problems are better understood.\r\n\r\nHe's spent the last 6 months building a serverless single page web application that integrates with several accounting packages. Prior to that he developed the core of a payment switch for Eftpos NZ. He is also a core contributor to the Concordion open source testing framework.",
        "twitter": "drtimwright",
        "title": "Serverless Applications - behind the hype",
        "abstract": "Lots of people are talking about \"serverless single page applications\". To be honest, it's a buzzword right now. This talk is going to be a deep dive into the technologies to find out what it is and the different complexity that you have to deal with.",
        "description": "Conventional web applications typically have lots of application servers behind a load balancer talking to a database with multiple read replicas. There is a reasonable maintenance overhead for this - server patching, database upgrades, and other things. However, the big cloud providers have a sufficiently wide set of services that you can now build a complex interactive web application without ever needing to maintain a server, worry about load balancing, or even concern yourself with scaling your application.\r\n\r\nThis is too good to be true. Going completely serverless creates an initial development overhead in data design and cost analysis - bad design can cause your costs to skyrocket. This talk will provide an overview of a serverless architecture and how it works and then have analyse some of these key design constraints and present some ways to overcome them.\r\n\r\nThe problems - and the solutions - examined in this talk are from a real world project that used incremental design to discover solutions to the problems as the problems were found. As that project used AWS services, the talk will focus on the AWS suite of services, but will reference the equivalent services provided by Google and Microsoft (Azure).",
        "audience_level": "Intermediate",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "11:30": {
      "Track 1": {
        "name": "Ducky",
        "avatar": "https://secure.gravatar.com/avatar/b81284b0e1c95d221717d82b1596cce1?s=500",
        "bio": "Eloise, aka Ducky, is a computing student. She works part time as a web developer at a Tasmanian web agency, Takeflight. Her main technical interests are in games technology, human-computer interaction, geographic information systems and any ways she can combine them. She is an active member in communities (including Girl Geek Coffees & Tasmanian Game Development Society), and in her free time she enjoys snowboarding, sailing, playing & making games and teaching kids how to code.",
        "twitter": "ducky_tape",
        "title": "Augmenting Reality with JS",
        "abstract": "Augmented Reality (AR) is becoming more accessible to a wide range of users, and with it, it brings a unique way for applications to interact with reality. So how can JavaScript be used to create these experiences?",
        "description": "Augmented Reality (AR) is becoming more accessible to a wide range of users, and with it, it brings a unique way for applications to interact with reality. So how can JavaScript be used to create these experiences?\r\n\r\nThis talk will briefly introduce Augmented Reality and it's history in the browser before comparing some of the current tools we can use implement some AR fun, today.  Throughout we will discuss some of the ways AR can be implemented more meaningfully than as just a gimmick.\r\n",
        "audience_level": "Intermediate",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Wulf Sölter",
        "avatar": "https://secure.gravatar.com/avatar/c9dd3965c5b03dd343f93759b52980bb?s=500",
        "bio": "* CTO / Buttons Pusherer of [Wherewolf](http://wherewolf.co.nz)\r\n* President of the [Queenstown Climbing Club](http://www.queenstownclimbing.com/)\r\n* That Guy at [Queenstown Technology Group](http://www.meetup.com/Queenstown-Technology-Group/)\r\n* Have vim bindings for mouse-free web browsing in Chrome and FF.\r\n* Will come out of coding isolation to offer you single TimTam, so that I can honestly say \"I didn't eat the whole packet myself\"",
        "twitter": "illektr1k",
        "title": "CTO's Perspective of Angular2 adoption from an early stage",
        "abstract": "A core component of our SaaS needed a rewrite, just ng2 was announced. We started the rewrite with ng2 beta.0, and have been simultaneously paying the price for, and reaping the benefits of, the bleeding edge since. Here's how we could've seen what we were getting ourselves into, earlier.",
        "description": "We've been spending the last 11 months working with ng2 and have seen many changes, both of the software itself and our attitude to software engineering because of the early embrace of a set of tools at what was, in hindsight, alpha software. A lot of ng2 stuff is really really cool but there was a lot of suck too... This talk will combine overviews of ng2, with insights to evaluating the Benefit Cost Ratio of making a decision to go with such a young project, and what external indicators there are to help make the right choice in future.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "12:00": {
      "Track 1": "Lunch",
      "Track 2": "Lunch"
    },
    "1:30": {
      "Track 1": {
        "name": "Simon Tegg",
        "avatar": "https://secure.gravatar.com/avatar/a913d27038c0b14795c70075c4db7a90?s=500",
        "bio": "I've taught JavaScript and web development at Enspiral Dev Academy since 2015 and programmed since 2011.  In past careers I've taught human languages (Japanese and Spanish), driven giant Excel spreadsheets to limits of sanity, and hobo'd both around New Zealand and internationally disguised as a cycle tourist. ",
        "twitter": "simontegg",
        "title": "\"Mutable identities and coupled concepts\" - Teaching and learning on a fullstack, bootcamp, JavaScript course ",
        "abstract": "The goal of a web development bootcamp is to shift a student's identity from \"non-technical\"  to a capable, self-directed, collaborative, web developer. \nI look at how the bootcamp experience facilitates this and the advantages and pitfalls of modern full-stack JavaScript as the course medium. \n",
        "description": " I propose that teaching developer novices means creating opportunities for students to tell stories about themselves as competent developers. Students who do so shift their identity to \"competent\" are prepared to learn and adapt to whatever a fast changing industry throws at them. \r\n\r\nNovices and experienced developers have different learning needs with implications for curriculum design and teaching technique. Experienced developers (mostly) identify as competent, have a body of knowledge with which to relate new concepts, and can learn quickly. A non-competent identity and lack of existing knowledge constrains novices.\r\n\r\nJavascript has advantages for overcoming these obstacles. The magic of frontend JavaScript - the ability to create things that non-technical users can see an interact with immediately helps develop a competent identity, While Node.js programming provides a good environment for teaching fundamental  web concepts. I present strategies and examples for teaching JavaScript and web development and pitfalls to avoid in the context of a 9 week bootcamp course.\r\n",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Garion Herman",
        "avatar": "https://secure.gravatar.com/avatar/0960c116244ec8b3485bd2cf394b6102?s=500",
        "bio": "A connoisseur of Lemon Lime & Bitters, and an avid user of the [MIDA Multi-tool](https://www.bungie.net/en/armory/Detail?type=item&item=1346849289&itemname=MIDA%20Multi-Tool), I am a developer at SilverStripe with particular interest in [Vue](https://vuejs.org)-based applications and building great tools. In my spare time I [dip my feet in Open Source](https://github.com/Cheddam/SwitchFlit), swim poorly, and play a variety of video games.",
        "twitter": "cheddam",
        "title": "Vues from the Server",
        "abstract": "You've probably heard a bit about Vue as a front-end library, but did you know how well it works on the server?\n\nUsing Node's async support, sockets, and some glue: we can build robust, server-rendered applications. Join me as we explore this topic!",
        "description": "Server-side Rendering of traditionally browser-based JavaScript applications is an exciting area of growth for web applications! Its primary function is to dramatically improve initial rendering speed, but it has other implications too - for example, thanks to shared libraries and async in Node, we can easily reduce overhead in client-server interactions.\r\n\r\nUtilising [Vue](https://vuejs.org) and its supporting libraries, let's explore an alternate approach to traditional REST / AJAX applications that makes the most of the tools we have at our disposal. Prior experience with Vue will be useful, but these concepts can be applied to a range of JavaScript frameworks.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "2:05": {
      "Track 1": {
        "name": "Seth Reid",
        "avatar": "https://secure.gravatar.com/avatar/3265952c71696c0d22c1f826be439458?s=500",
        "bio": "My name is Seth Reid and I am an avid technologist and developer who currently works for Intergen in Wellington. I'm the JavaScript guy in a .NET shop and I like it that way. I run the Azure meetups and participate in various different community activities around coding and helping people learn and get excited about programming.\r\n\r\nIn my spare time I like to master acoustic version of 90s/2000s rap classics, lift weights and build various things using whatever takes my fancy on the day.",
        "twitter": "sethreidnz",
        "title": "React Native - Next Generation JavaScript Mobile",
        "abstract": "React Native is a next generation JavaScript mobile development framework allowing you build native apps in JavaScript. My talk will give you an introduction into the basic concepts, some details on how it works under the hood and then dive into the code for a full working react native app.",
        "description": "# React Native - Next Generation JavaScript Mobile\r\n\r\n[React Native](https://facebook.github.io/react-native/) is an exciting and young JavaScript platform for building native UI mobile apps with JavaScript. With a plethora of JavaScript mobile frameworks in the wild today my talk will give you everything you need to know to decided the question \"should I learn yet another JavaScript framework?\". And the answer is \"Yes\".\r\n\r\n## What you will learn about?\r\n\r\nMy talk is split into three parts:\r\n\r\n1. What is React Native, how does it work and why would I use it?\r\n2. React Native fundamentals\r\n3. Showcase and explore fully built cross platform app\r\n\r\n### What is React Native, how does it work and why would I use it?\r\n\r\nIn this section I am going to cover the basics of what React Native is and isn't and then make a case for why you would choose React Native to build your next cross platform mobile app. I'm going to go into detail about the architecture behind React Native, how it really is \"native\" as well as the exciting productivity gains you get from the \"hot reloading\" and tooling available in the React/JavaScript ecosystem.\r\n\r\n### React Native fundamentals\r\n\r\nThink of this as \"React Native\" 101. I am going to go into how React Native *looks* and the basic concepts that are common between React and React Native as well as how they differ. This section I will also showcase some of the tools such as [Reactotron](https://github.com/infinitered/reactotron) and [Hot Reloading](https://facebook.github.io/react-native/blog/2016/03/24/introducing-hot-reloading.html) which make mobile development as easy and quick as developing a JavaScript app in the browser. All this powered by an amazing starter kit called [Ignite](https://infinite.red/ignite) that will get you building mobile apps in no time.\r\n\r\n### Showcase and explore fully built cross platform app\r\n\r\nThis is where I show you something real. An app that I use to time my yoga and flexibility routines that is built completely in JavaScript and uses a few different native features. I'll dive into the code and show you how a medium scale project looks in React Native.\r\n\r\n# Final thoughts\r\n\r\nI will be open sourcing everything I do in the talk before the event so if you don't believe its native performance you can install it yourself... you don't have to trust me!\r\n\r\n",
        "audience_level": "All",
        "tag_list": [
          "mobile",
          "react-native",
          "react"
        ],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Richard Walker",
        "avatar": "",
        "bio": "Full stack (but with a special heart for Node.js) Javascript developer and module author, originally from Christchurch. I work for New Zealand based agency The Media Suite remotely from my new home town of Oslo, Norway most of the time - and sometimes from other random locations. Organizer of NodeConf Christchurch, Web Rebels Oslo and NodeConf Oslo. Excellent at building space shuttles out of Duplo.",
        "twitter": "digitalsadhu",
        "title": "W.W.E.D. (What would Ember.js do?)",
        "abstract": "What would Ember look like if it was a server side framework? This talk will explore this idea as well as some key framework design related concepts such as inversion of control and extensibility, all illustrated with code from a new Ember inspired Node.js framework we’ve been working on called Ash.",
        "description": "After identifying a number of pain points in our current backend stack we began to ask ourselves questions such as “how can we be more productive?” and “how could our developer experience be improved?”\r\n\r\nAs Ember.js developers we see the benefits of well thought out and consistent APIs as well as strong conventions. This lead me to wonder what a Node.js based server side framework that was heavily inspired by Ember might look like. From there “Ash” arose.\r\n\r\nIn this talk I will explore some of the big ideas behind framework design. I’ll talk core concepts such as “inversion of control” and “extensibility” and then go on to discuss some of our philosophical goals for Ash such as “convention over configuration”, “consistent APIs” and “developer productivity”. Along the way I’ll share code and try to convince you that an Ember flavoured server side framework does indeed make good sense.",
        "audience_level": "All",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      }
    },
    "2:40": {
      "Track 1": {
        "name": "Stevie Mayhew",
        "avatar": "https://secure.gravatar.com/avatar/b58b815b0db5ef690275c7cd7baba39a?s=500",
        "bio": "Stevie is the Chief Technology Officer of Little Giant, a digital agency based in Auckland, New Zealand. He has a decades worth of experience producing large scale software solutions for New Zealand's leading companies. He regularly contributes to the open-source community, is a member of the JavaScript NZ committee and the SilverStripe core development team; and regularly contributes to industry thought leadership via written articles and speaking engagements.",
        "twitter": "steviemayhew",
        "title": "Hands on with A-Frame",
        "abstract": "Virtual Reality. In your browser.\n\nLearn the basics of A-Frame and how to start developing virtual reality with the tools and skills you already know and love, right now.\n\nA-Frame is a web framework for building virtual reality experiences using HTML and an entity-component ecosystem.",
        "description": "# Hands on with A-Frame\r\nA hands-on exploration of Virtual Reality in the browser, using A-Frame.\r\n\r\nBy the end of this session, you will know how to set up A-Frame and write code to run Virtual Reality in your browser. You'll also be exposed to other exciting systems and have an understanding of where Virtual Reality technology is heading in browser based applications.\r\n\r\n## A Quick History\r\nHear about how virtual reality in the browser has come a long way. Virtual Reality in the browser is over 20 years old, ranging from VRML to today.\r\n\r\n## Learn A-Frame\r\nLearn how to implement and use A-Frame. Explore the basic systems, components and tools that A-Frame exposes, and builds upon. See how to quickly get up and running in A-Frame and how to build Virtual Reality in your browser, using tools you already know and love.\r\n\r\n## An Exciting Future\r\nWhat does the future hold for Virtual Reality in the browser and why is it so exciting?",
        "audience_level": "Beginner",
        "tag_list": [],
        "length": 30,
        "type": "talk"
      },
      "Track 2": {
        "name": "Mix Irving",
        "avatar": "",
        "bio": "I’m a nerd - I’m into sci-fi, magic the gathering, node, sprints, and retrospectives. I’m chill but have an overly earnest thinking face - if you notice me frowning at all, that’s me listening intently to you <3\r\n\r\nRight now I’m teaching empathic code-ninjas at [Dev Academy](http://www.devacademy.co.nz/). I’m also an active member of Enspiral - a little community of social anarchists.",
        "twitter": "whimful",
        "title": "Embracing Subjectivity",
        "abstract": "Cast central authorities aside and take a tour of a inter-net conceived subjectively. Learn about the challenges and benefits of not having singlular sources of truth, and take a tour of the Scuttleverse - an actively growing decent community (of code and humans).",
        "description": "Cast central authorities aside and take a tour of a web conceived subjectively. Learn about the challenges and benefits of not having singlular sources of truth, and take a tour of the [Scuttleverse](https://www.scuttlebutt.nz/) - an actively growing de-cent community (of code and humans).\r\n\r\nWe’ll discuss questions like:\r\n\r\n* identity - how do I know who’s who without someone coordinating usernames?\r\n* ownership - who owns the data, where does it live?\r\n* the past/ offline - wait, is this mostly just like meat space?\r\n\r\n* We’ll check out the current state of a subjective net called the Scuttleverse, and some of the apps growing there.",
        "audience_level": "Beginner",
        "tag_list": [
          "node",
          "javascript",
          "decentralisation"
        ],
        "length": 30,
        "type": "talk"
      }
    },
    "3:10": {
      "Track 1": "Afternoon tea",
      "Track 2": "Afternoon tea"
    },
    "3:40": {
      "Track 1": {
        "name": "Simon Swain",
        "avatar": "https://secure.gravatar.com/avatar/363d41993de04d90ae57ab2e8e836acc?s=500",
        "bio": "A Wellington ex-pat now located in Sydney, Simon has been building the web since the very beginning. Currently he architects cloud services for connected devices. As a sideline the past few years have seen him presenting the evolution of his Coldwar.io simulation platform at conferences around the planet.",
        "twitter": "simon_swain",
        "title": "Rats of the Maze",
        "abstract": "Rats of the Maze is an arcade simulation exploring the theory and technique of programming flesh-eating, maze-solving rats, wrapped up in unique hand crafted vector graphics and sound running in the browser.\n",
        "description": "# Rats of the Maze\r\n\r\nThe year is 2048.\r\n\r\nThirty years ago we outsourced the very running of our lives to Machines. Machines that learn. The Machines learnt too well.\r\n\r\nAll computing resource on the planet has been consolidated in an vast Maze hewn out of solid rock.\r\n\r\nNo humans have access to The Maze, but the warm glow of it's reactors make it an ideal home for millions of flesh eating Rats.\r\n\r\nYour mission is to enter The Maze and sabotage the power source of The Machines and free the human race from it's self-inflicted, automated prison.\r\n\r\nUntil today, no human has returned from The Maze of the Rats.\r\n\r\n+++ TRANSMISSION END\r\n\r\nRats of the Maze is an arcade simulation exploring the theory and technique of programming flesh-eating maze-solving, wrapped up in unique hand crafted vector graphics and sound running in the browser.\r\n\r\n[ratsofthemaze.com](https://ratsofthemaze.com)\r\n",
        "audience_level": "All",
        "tag_list": [],
        "length": 20,
        "type": "talk"
      },
      "Track 2": null
    },
    "4:05": {
      "Track 1": {
        "name": "PrototypeAlex",
        "avatar": "https://secure.gravatar.com/avatar/a11d368b54f65e98eda9d53fe9fc0e34?s=500",
        "bio": "Alex Gibson is a Software Engineer with a drive to help strengthen the culture of New Zealand's technical community. He's the founder of NodeBots New Zealand, secretary for the New Zealand JavaScript Society, organiser of the Wellington JavaScript meet-up and technical lead of the Summer of Tech programme.\r\n\r\nGibson is also a mental health awareness advocate; he talks openly about his suffering of Bipolar type 1 disorder, and promotes others to openly discuss mental illnesses in the tech community.\r\n\r\nEarlier in his career, Alex co-founded Hashbang, a software consultancy here in Wellington. He also joined as the 1st (equal) employee at Atomic, a Wellington based design prototyping tool, and he now runs a software consultancy called Console, that has a focus is on helping companies build solutions to complex problems and grow teams and people.\r\n\r\nGibson lives in Paraparaumu with his loving partner Sabrina Schellkes, two children Ollie and Arlo, and two cats Spak and Felix. Gibson finds peace in building robots and growing and maintaining cultures of sourdough, kefir and kombucha.",
        "twitter": "PrototypeAlex",
        "title": "Technology for Everyone",
        "abstract": "Our tech community needs to spread past its industry borders. We need to make New Zealand a place not just where talent wants to live, but where talent can grow.\n\nCome and hear about the crusade to build an all-inclusive, diverse culture of technology for everyone, and learn how you can help too.",
        "description": "In this presentation, Alex Gibson will share his goal to further Sir Paul Callaghan's vision: to make New Zealand a place where talent wants to live, by building local and national communities, capable of supporting our country's growing hi-tech industry. To do so, he needs your help.\r\n\r\nThanks to our powerhouse tech startups, New Zealand’s transformation into a place where talent wants to live is already well underway, however we can't solely rely on companies to attract technologists to our country. We must look to growing talent locally.\r\n\r\nWe have our work cut out for us: juniors need mentoring, seniors need guidance, kids need teaching, and the elderly need help. Academia needs industry alignment, equality needs addressing, and mental health needs open sourcing. Our problems are vast and complex yet solvable.\r\n\r\nWe need to grow and expand our technical community by helping existing organisations and creating new ones. This is our chance to lead the world and create a tech culture that is not just limited to technologists, but everyone, young and old.\r\n\r\nSo come along and learn how you can help build a tech community that can support New Zealand.",
        "audience_level": "All",
        "tag_list": [
          "community",
          "culture"
        ],
        "length": 30,
        "type": "talk"
      },
      "Track 2": null
    },
    "4:40": {
      "Track 1": "Conference closing",
      "Track 2": null
    },
    "5:00": {
      "Track 1": "End of day two",
      "Track 2": "End of day two"
    }
  }
}
