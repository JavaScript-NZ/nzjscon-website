{"version":3,"sources":["webpack:///./src/pages/lunch.js"],"names":["Option","option","key","name","className","styles","foodListTag","type","foodListAddress","address","foodListCostLabel","foodListCost","cost","foodListWalktimeLabel","foodListWalktime","walktime","href","directions","website","LunchOptions","React","useState","selectedTag","setSelectedTag","tags","tagList","LunchData","forEach","includes","push","tag","cn","selected","onClick","foodList","filter","sort","a","b","map"],"mappings":"6LAQMA,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,wBAAIC,IAAKD,EAAOE,MACd,4BACGF,EAAOE,KADV,IACgB,0BAAMC,UAAWC,IAAOC,aAAcL,EAAOM,OAE7D,uBAAGH,UAAWC,IAAOG,iBAAkBP,EAAOQ,SAC9C,0BAAML,UAAWC,IAAOK,mBAAxB,SACQ,0BAAMN,UAAWC,IAAOM,cAAeV,EAAOW,OAEtD,0BAAMR,UAAWC,IAAOQ,uBAAxB,aACa,IACX,0BAAMT,UAAWC,IAAOS,kBAAmBb,EAAOc,SAAlD,UAEF,uBACEX,UAAU,sCACVY,KAAMf,EAAOgB,YAFf,cAMA,uBAAGb,UAAU,iCAAiCY,KAAMf,EAAOiB,SAA3D,aA4GSC,UArGM,WAAO,IAAD,IACaC,IAAMC,SAAS,OAA9CC,EADkB,KACLC,EADK,KAEnBC,EAAO,GACPC,EAAU,GA+BhB,OA7BAC,EAAUC,SAAQ,SAAA1B,GACXuB,EAAKI,SAAS3B,EAAOM,OACxBiB,EAAKK,KAAK5B,EAAOM,SAIrBiB,EAAKG,SAAQ,SAAAG,GAAQ,IAAD,EAClBL,EAAQI,KACN,4BACE3B,IAAK4B,EACL1B,UAAW2B,IACT,MACA,wBACA,OACA,OACA1B,IAAOC,aALI,OAORD,IAAO2B,UAAWV,IAAgBQ,EAP1B,IAUbG,QAAS,WACPV,EAAeO,KAGhBA,OAML,kBAAC,IAAD,KACE,oDAEA,yDAC6B,uCAD7B,oQAQA,yCACA,4BACE,4BACE,0BAAM1B,UAAWC,IAAOM,cAAxB,KADF,gCAIA,4BACE,0BAAMP,UAAWC,IAAOM,cAAxB,MADF,iCAIA,4BACE,0BAAMP,UAAWC,IAAOM,cAAxB,OADF,+BAMF,8CACA,2BACE,4BACEP,UAAW2B,IACT,MACA,wBACA,OACA,OACA1B,IAAOC,aALI,OAORD,IAAO2B,UAA2B,QAAhBV,EAPV,IAUbW,QAAS,WACPV,EAAe,SAZnB,OAiBCE,GAGH,6BAEA,wBAAIrB,UAAWC,IAAO6B,UACnBR,EAAUS,QAAO,SAAAlC,GAChB,MAAoB,QAAhBqB,GAGGrB,EAAOM,OAASe,KAEtBc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEtB,SAAWuB,EAAEvB,YAC9BwB,KAAI,SAAAtC,GAAM,OACT,kBAACD,EAAD,CAAQC,OAAQA,EAAQC,IAAKD,EAAOE,c","file":"component---src-pages-lunch-js-08c865333e58953f16e4.js","sourcesContent":["import React from \"react\"\nimport cn from \"classnames\"\n\nimport Layout from \"~/components/layout\"\nimport LunchData from \"~/content/lunch.json\"\n\nimport styles from \"~/pages/lunch.module.scss\"\n\nconst Option = ({ option }) => {\n  return (\n    <li key={option.name}>\n      <h4>\n        {option.name} <span className={styles.foodListTag}>{option.type}</span>\n      </h4>\n      <p className={styles.foodListAddress}>{option.address}</p>\n      <span className={styles.foodListCostLabel}>\n        Cost: <span className={styles.foodListCost}>{option.cost}</span>\n      </span>\n      <span className={styles.foodListWalktimeLabel}>\n        Walk time:{\" \"}\n        <span className={styles.foodListWalktime}>{option.walktime} mins</span>\n      </span>\n      <a\n        className=\"btn btn-outline-primary btn-sm mr-3\"\n        href={option.directions}\n      >\n        Directions\n      </a>\n      <a className=\"btn btn-outline-primary btn-sm\" href={option.website}>\n        Website\n      </a>\n    </li>\n  )\n}\n\nconst LunchOptions = () => {\n  const [selectedTag, setSelectedTag] = React.useState(\"All\")\n  const tags = []\n  const tagList = []\n\n  LunchData.forEach(option => {\n    if (!tags.includes(option.type)) {\n      tags.push(option.type)\n    }\n  })\n\n  tags.forEach(tag => {\n    tagList.push(\n      <button\n        key={tag}\n        className={cn(\n          \"btn\",\n          \"btn-outline-secondary\",\n          \"mr-2\",\n          \"mb-2\",\n          styles.foodListTag,\n          {\n            [styles.selected]: selectedTag === tag,\n          }\n        )}\n        onClick={() => {\n          setSelectedTag(tag)\n        }}\n      >\n        {tag}\n      </button>\n    )\n  })\n\n  return (\n    <Layout>\n      <h1>Nearby lunch options</h1>\n\n      <p>\n        Lunch at the conference is <strong>not</strong> catered (just morning\n        and afternoon tea) so we're giving you an hour and a half to get some\n        lunch. Here are some nearby suggestions, with everything from takeaway\n        pizza by the slice, right up to fine dining, all within about ten\n        minutes walk of the venue.\n      </p>\n\n      <h6>Cost key:</h6>\n      <ul>\n        <li>\n          <span className={styles.foodListCost}>$</span> = Main is roughly $5 to\n          $15\n        </li>\n        <li>\n          <span className={styles.foodListCost}>$$</span> = Main is roughly $15\n          to $30\n        </li>\n        <li>\n          <span className={styles.foodListCost}>$$$</span> = Main is on average\n          $30+\n        </li>\n      </ul>\n\n      <h6>Filter by tag:</h6>\n      <p>\n        <button\n          className={cn(\n            \"btn\",\n            \"btn-outline-secondary\",\n            \"mr-2\",\n            \"mb-2\",\n            styles.foodListTag,\n            {\n              [styles.selected]: selectedTag === \"All\",\n            }\n          )}\n          onClick={() => {\n            setSelectedTag(\"All\")\n          }}\n        >\n          All\n        </button>\n        {tagList}\n      </p>\n\n      <hr />\n\n      <ul className={styles.foodList}>\n        {LunchData.filter(option => {\n          if (selectedTag === \"All\") {\n            return true\n          }\n          return option.type === selectedTag\n        })\n          .sort((a, b) => a.walktime > b.walktime)\n          .map(option => (\n            <Option option={option} key={option.name} />\n          ))}\n      </ul>\n    </Layout>\n  )\n}\nexport default LunchOptions\n"],"sourceRoot":""}