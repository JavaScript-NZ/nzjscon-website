{"version":3,"sources":["webpack:///./src/pages/schedule.js"],"names":["ScheduleItem","item","React","useState","abstractShown","setAbstractShown","title","type","name","className","length","abstract","styles","talkAbstract","hidden","aria-controls","aria-expanded","onClick","video","talkVideoLink","href","ScheduleRow","timeslot","timeslotData","colSpan","empty","ScheduleTable","schedule","day","ScheduleData","row","push","id","scheduleDay","scheduleTable"],"mappings":"+JAOMA,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACSC,IAAMC,UAAS,GAAlDC,EAD0B,KACXC,EADW,KAGjC,OAAKJ,EAAKK,MAQR,4BACE,4BACiB,YAAdL,EAAKM,MAAsB,iDAC3BN,EAAKK,OAEPL,EAAKO,MAAQ,0BAAMC,UAAU,eAAeR,EAAKO,MACjDP,EAAKS,QAAU,uBAAGD,UAAU,cAAcR,EAAKS,OAAhC,SAEfT,EAAKU,UACJ,yBAAKF,UAAWG,IAAOC,cACrB,4BACEJ,UAAWL,EAAgBQ,IAAOE,OAAS,oBAC3CC,gBAAc,eACdC,gBAAc,QACdC,QAAS,kBAAMZ,GAAiB,KAJlC,oBAQA,yBAAKI,UAAYL,EAAgC,GAAhBQ,IAAOE,QACtC,2BAAIb,EAAKU,UACT,4BACEF,UAAU,oBACVM,gBAAc,eACdC,gBAAc,OACdC,QAAS,kBAAMZ,GAAiB,KAJlC,sBAYLJ,EAAKiB,OACJ,uBAAGT,UAAWG,IAAOO,cAAeC,KAAK,gBAAzC,gBAvCF,4BACE,4BAAKnB,KA8CPoB,EAAc,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAC/B,OACEA,EAAa,aAAeA,EAAa,YACN,iBAA5BA,EAAa,WAIlB,4BACE,4BAAKD,GACL,wBAAIE,QAAQ,KACV,4BAAKD,EAAa,cAIfA,EAAa,YAAcA,EAAa,WAG/C,4BACE,4BAAKD,GACL,kBAACtB,EAAD,CAAcC,KAAMsB,EAAa,aACjC,kBAACvB,EAAD,CAAcC,KAAMsB,EAAa,cAG5BA,EAAa,WAGpB,4BACE,4BAAKD,GACL,kBAACtB,EAAD,CAAcC,KAAMsB,EAAa,aACjC,wBAAId,UAAWG,IAAOa,SAGjBF,EAAa,WAGpB,4BACE,4BAAKD,GACL,wBAAIb,UAAWG,IAAOa,QACtB,kBAACzB,EAAD,CAAcC,KAAMsB,EAAa,mBANhC,GAyDMG,UA7CO,WACpB,IAAIC,EAAW,GAEf,IAAK,IAAMC,KAAOC,EAAc,CAC9B,IAAIC,EAAM,GAEV,IAAK,IAAMR,KAAYO,EAAaD,GAClCE,EAAIC,KACF,kBAACV,EAAD,CACEC,SAAUA,EACVC,aAAcM,EAAaD,GAAKN,MAItCK,EAASI,KACP,oCACE,wBAAIC,GAAIJ,EAAKnB,UAAWG,IAAOqB,aAC5BL,GAEH,2BAAOnB,UAAWG,IAAOsB,eACvB,+BACE,4BACE,6BACA,uCACA,yCAGJ,+BAAQJ,MAMhB,OACE,kBAAC,IAAD,KACE,wCAEA,2BACE,uBAAGV,KAAK,WAAR,UADF,MACiC,uBAAGA,KAAK,YAAR,YAGhCO,K","file":"component---src-pages-schedule-js-76245899decfc9acaeeb.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"~/components/layout\"\nimport ScheduleData from \"~/content/schedule.json\"\n\nimport styles from \"~/pages/schedule.module.scss\"\n\nconst ScheduleItem = ({ item }) => {\n  const [abstractShown, setAbstractShown] = React.useState(false)\n\n  if (!item.title) {\n    return (\n      <td>\n        <h5>{item}</h5>\n      </td>\n    )\n  }\n  return (\n    <td>\n      <h5>\n        {item.type === \"keynote\" && <>Keynote: </>}\n        {item.title}\n      </h5>\n      {item.name && <span className=\"talkSpeaker\">{item.name}</span>}\n      {item.length && <p className=\"talkLength\">{item.length} mins</p>}\n\n      {item.abstract && (\n        <div className={styles.talkAbstract}>\n          <button\n            className={abstractShown ? styles.hidden : \"btn btn-secondary\"}\n            aria-controls=\"{item.title}\"\n            aria-expanded=\"false\"\n            onClick={() => setAbstractShown(true)}\n          >\n            Show description\n          </button>\n          <div className={!abstractShown ? styles.hidden : \"\"}>\n            <p>{item.abstract}</p>\n            <button\n              className=\"btn btn-secondary\"\n              aria-controls=\"{item.title}\"\n              aria-expanded=\"true\"\n              onClick={() => setAbstractShown(false)}\n            >\n              Hide description\n            </button>\n          </div>\n        </div>\n      )}\n\n      {item.video && (\n        <a className={styles.talkVideoLink} href=\"{item.video}\">\n          Watch video\n        </a>\n      )}\n    </td>\n  )\n}\n\nconst ScheduleRow = ({ timeslot, timeslotData }) => {\n  if (\n    timeslotData[\"Track 1\"] === timeslotData[\"Track 2\"] &&\n    typeof timeslotData[\"Track 1\"] === \"string\"\n  ) {\n    // identical items, must be e.g. a break\n    return (\n      <tr>\n        <th>{timeslot}</th>\n        <td colSpan=\"2\">\n          <h5>{timeslotData[\"Track 1\"]}</h5>\n        </td>\n      </tr>\n    )\n  } else if (timeslotData[\"Track 1\"] && timeslotData[\"Track 2\"]) {\n    // data for both tracks\n    return (\n      <tr>\n        <th>{timeslot}</th>\n        <ScheduleItem item={timeslotData[\"Track 1\"]} />\n        <ScheduleItem item={timeslotData[\"Track 2\"]} />\n      </tr>\n    )\n  } else if (timeslotData[\"Track 1\"]) {\n    // data only for track 1\n    return (\n      <tr>\n        <th>{timeslot}</th>\n        <ScheduleItem item={timeslotData[\"Track 1\"]} />\n        <td className={styles.empty}></td>\n      </tr>\n    )\n  } else if (timeslotData[\"Track 2\"]) {\n    // data only for track 2\n    return (\n      <tr>\n        <th>{timeslot}</th>\n        <td className={styles.empty}></td>\n        <ScheduleItem item={timeslotData[\"Track 2\"]} />\n      </tr>\n    )\n  }\n}\n\nconst ScheduleTable = () => {\n  let schedule = []\n\n  for (const day in ScheduleData) {\n    let row = []\n\n    for (const timeslot in ScheduleData[day]) {\n      row.push(\n        <ScheduleRow\n          timeslot={timeslot}\n          timeslotData={ScheduleData[day][timeslot]}\n        />\n      )\n    }\n    schedule.push(\n      <>\n        <h3 id={day} className={styles.scheduleDay}>\n          {day}\n        </h3>\n        <table className={styles.scheduleTable}>\n          <thead>\n            <tr>\n              <th></th>\n              <th>Track 1</th>\n              <th>Track 2</th>\n            </tr>\n          </thead>\n          <tbody>{row}</tbody>\n        </table>\n      </>\n    )\n  }\n\n  return (\n    <Layout>\n      <h1>Schedule</h1>\n\n      <p>\n        <a href=\"#Monday\">Monday</a> | <a href=\"#Tuesday\">Tuesday</a>\n      </p>\n\n      {schedule}\n    </Layout>\n  )\n}\nexport default ScheduleTable\n"],"sourceRoot":""}